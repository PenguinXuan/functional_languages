head	1.2;
access;
symbols;
locks;
comment	@# @;


1.2
date	2020.01.17.22.21.14;	author -;	state -;
branches;
next	1.1;

1.1
date	2019.01.18.19.47.25;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@# $Id: 32-factorial.sb,v 1.4 2019-11-26 14:08:39-08 - - $
#
# Factorial.
#
read:   print "Factorial of:"
        input x
        # check the variable eof for a valid value or not.
        if eof = 1 goto stop
        if x != x goto error
        if x < 0 goto error
        goto letfac
error:  print "Invalid input."
        goto read

#
#
#

letfac: let factorial = 1
        let itor = 2
loop:   if itor > x goto prt
        let factorial = factorial * itor
        let itor = itor + 1
        goto loop
prt:    print "factorial(", x, ") = ", factorial
        goto read

#
# end of file.
#

stop:   print "Program stopping."
@


1.1
log
@-
@
text
@d1 1
a1 1
# $Id: 32-factorial.sb,v 1.1 2019-01-17 17:24:45-08 - - $
d9 1
a9 1
        if x <> x goto error
@
